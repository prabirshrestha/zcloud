#!/usr/bin/env bash
ZEXENAME=$(basename $0)
ZSCRIPT_PATH=$(readlink -m $( type -p $0 ))

if [ -f "/etc/arch-release" ]; then
  export ZPKG_MANAGER="pacman"
else
  export ZPKG_MANAGER="apt-get"
fi
export ZUSER="${ZUSER:-$USER}"
export ZPASSWORD="${ZPASSWORD:-zpassword}"
export ZSSH_AUTHORIZED_KEYES="$HOME/.ssh/authorized_keys"
export ZROOT_DOMAIN="${ZROOT_DOMAIN:-}"
export ZCA_SERVER="${ZCA_SERVER:-production}"
export ZGIT_USER="${ZGIT_USER:-git}"
export ZGIT_HOME="${ZGIT_HOME:-/home/$ZGIT_USER}"
export ZGIT_PATH="${ZGIT_PATH:-git}"

cmd_help() {
  echo "Usage: $ZEXENAME <subcommand> [options]"
  echo "Subcommands:"
  echo "   install        Install prerequisites (requires sudo)"
  echo "   init           Initializes server (requires sudo)"
  echo "   create <name>  Create empty app"
  echo "   help           Show help"
}

cmd_install() {
  set -e
  echo "Installing..."

  echo "Installing requried packages via $ZPKG_MANAGER"

  if [ "$ZPKG_MANAGER" = "pacman" ]; then
    $ZSUDO "$ZPKG_MANAGER" -Syy
    $ZSUDO "$ZPKG_MANAGER" -S --noconfirm git docker
  else
    $ZSUDO "$ZPKG_MANAGER" update -y -qq
    $ZSUDO "$ZPKG_MANAGER" install -y -qq git docker.io apt-transport-https
  fi
}

cmd_init() {
  fcmd_init_gituser "$ZGIT_HOME" "$ZGIT_USER"
  echo
  echo "Be sure to upload a public key for your user to $ZGIT_HOME/.ssh/authorized_keys"
}

# Create a git user on the system with home directory and
# an authorized_keys file that contains public keys for all users
# that are allowed to push their repos here.
# User defaults to $ZGIT_USER which defaults to 'git'.
fcmd_init_gituser() {
  echo "Initializing git user"
  declare git_home="$1" git_user="$2" || true
  useradd -d "$git_home" "$git_user" || true
  mkdir -p "$git_home/.ssh"
  touch "$git_home/.ssh/authorized_keys"
  chown -R "$git_user" "$git_home"
  cp "$ZSCRIPT_PATH" "$git_home"
  chmod +x "$ZSCRIPT_PATH"
  echo "Created user '$git_user' with '$git_home' directory."
}

cmd_create() {
  set -e
  declare name="$1"
  declare repo_path="$ZGIT_HOME/$name"
  if [ "$name" = "" ]; then
    echo "Name required"
    exit 1
  fi
  echo "Creating app '$1'"
  if [ ! -d "$repo_path" ]; then
    mkdir -p "$repo_path"
    cd "$repo_path"
    "$ZGIT_PATH" init --bare
    cd -
    local postreceive_path="$repo_path/hooks/post-receive"
    cat > "$postreceive_path" <<EOF
#!/usr/bin/env bash
set -eo pipefail;
../../zcloud git-post-receive
EOF
    chmod +x "$postreceive_path"
    echo "Created app '$name' at '$repo_path'"
  else
    echo "Failed to create duplicate app '$name'"
    exit 1
  fi
}

cmd_git-post-receive() {
  echo "git post receive"
}

subcommand=$1
case $subcommand in
  "" | "-h" | "--help")
    cmd_help
    ;;
  *)
  shift
  cmd_${subcommand} $@
  if [ $? = 127 ]; then
    echo "Error: $subcommand is not a known subcommand" >&2
    echo "  Run '$ZEXENAME --help'"
    exit 1
  fi
  ;;
esac
